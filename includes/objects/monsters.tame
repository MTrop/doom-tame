
// ==========================
// Monsters
// ==========================

object archetype o_monsters : o_allobjects
{
	init()
	{
		// name used for generic battle.
		name = "((MONSTER))";
		// max monster health (used for damage assessment).
		healthMax = 0;
		// max reaction time
		reactionMax = 0;

		health = 0;
		reaction = 0;
		dead = false;
		superdead = false;
	}
	
	// Called when "AI" ticks down a reaction.
	// Does not set anything. Just flavor.
	procedure("MonsterIdle")
	{
		// Do nothing. Override.
	}
	
	// Called when "AI" says to attack.
	// Should do something to the current player.
	procedure("MonsterAttack")
	{
		// Do nothing. Override.
	}

	// Called when "AI" says to attack, but player is already dead.
	// Does not set anything. Just flavor.
	procedure("MonsterAbortAttack")
	{
		// Do nothing. Override.
	}

	// Called when the monster dies.
	// Does not set anything. Just flavor.
	procedure("MonsterDie")
	{
		// Do nothing. Override.
	}

	// Called when the monster dies A LOT.
	// Does not set anything. Just flavor.
	procedure("MonsterSuperDie")
	{
		// Do nothing. Override.
	}

	// Called on monster examine if dead.
	// Does not set anything. Just flavor.
	procedure("MonsterStatusDead")
	{
		// Do nothing. Override.
	}
	
	// Called on monster examine if still alive.
	// Does not set anything. Just flavor.
	procedure("MonsterStatusAlive")
	{
		local percent = health * 100 / healthMax;
		if (percent < 10)
			textln("It looks like it's barely clinging to life.");
		else if (percent < 25)
			textln("It looks pretty darn wounded.");
		else if (percent < 50)
			textln("It looks significantly wounded.");
		else if (percent < 75)
			textln("It's wounded, but still kickin'!");
		else
			textln("It's practically unscathed.");
	}

	// Called when "AI" says to attack.
	procedure("CheckMonsterDead")
	{
		local percent = health * 100 / healthMax;
		if (percent <= 0)
		{
			if (+percent >= 50)
			{
				call("MonsterSuperDie");
				superdead = true;
			}
			else
				call("MonsterDie");
			dead = true;
		}
	}
	
	// Called to reset reaction time.
	procedure("ResetReaction")
	{
		reaction = random(reactionMax / 2) + (reactionMax / 2);
	}

	// --> Override
	procedure("ExamineAlways")
	{
		if (dead)
			call("MonsterStatusDead");
		else
			call("MonsterStatusAlive");
	}
	
	// Called on monsters in a room.
	onAction(a_monsterthink)
	{
		if (dead)
			end;
	
		reaction = reaction - 1;
		if (reaction > 0)
			call("MonsterIdle");
		else
		{
			if (player.health > 0)
			{
				call("MonsterAttack");
				call("ResetReaction");
			}
			else
				call("MonsterAbortAttack");
		}
	}
	
	onAction(a_converse)
	{
		textln(
			"Oh, if only you could talk to these creatures, then perhaps you "+
			"could try and make friends with them, form alliances... now THAT would be interesting!"
		);
		textln("But you can't. Sorry.");
	}
	
	// Default Pistol Combat.
	onActionWith(a_use, o_pistol)
	{
		if (dead)
		{
			textln("It's already dead. Why waste the ammo?");
			end;
		}
	
		textln("You fire your pistol at the "+name+"!");
		
		local x = random(3);
		if (x == 0)
			textln("BANG! BANG!");
		else if (x == 1)
			textln("BLAO! POP!");
		else if (x == 2)
			textln("BLAT! BLAT!");
		
		local dmg = 0;
		x = o_pistol.attackDice;
		while (x > 0)
		{
			dmg = dmg + (1 + random(o_pistol.attackDiceSize));
			x = x - 1;
		}
		
		health = health - dmg;
		textln("You deal "+dmg+" damage to the "+name+"!");
		
		call("CheckMonsterDead");
	}

	// Default Shotgun Combat.
	onActionWith(a_use, o_shotgun)
	{
		if (dead)
		{
			textln("It's already dead. Why waste the ammo?");
			end;
		}

		textln("You fire your shotgun at the "+name+"!");
		
		local x = random(2);
		if (x == 0)
			textln("BLAM! ...*click-click*");
		else if (x == 1)
			textln("BLAO! ...*click-click*");
		
		local dmg = 0;
		x = o_shotgun.attackDice;
		while (x > 0)
		{
			dmg = dmg + (1 + random(o_shotgun.attackDiceSize));
			x = x - 1;
		}
		
		health = clamp(health - dmg, 0, healthMax);
		textln("You deal "+dmg+" damage to the "+name+"!");
		
		call("CheckMonsterDead");
	}
	
}

// ==========================
// Zombie
// ==========================
object o_zombie : o_monsters named "zombie", "the zombie" tagged "monster"
{
	init()
	{
		name = "zombie";
		healthMax = 20;
		health = 20;
		reactionMax = 5;
		reaction = 5;
	}
	
	// --> Override
	procedure("ExamineFirst")
	{
		text("A hideous caricature of what once was a man (...or woman? Hard to tell) is ");
		if (superdead)
			textln("strewn about in bits and pieces all over the room.");
		else if (dead)
			textln("lying dead on the floor.");
		else
			textln("now shuffling aimlessly around the room.");
	}
	
	// --> Override
	procedure("MonsterIdle")
	{
		local x = random(3);
		if (x == 0)
			textln("The zombie mills about, as zombies do.");
		else if (x == 1)
			textln("The zombie shuffles around, and trips over itself.");
		else
			textln("The zombie mutters something in a demonic tongue. Maybe it was, \"brains?\"");
	}

	// --> Override
	procedure("MonsterAbortAttack")
	{
		textln("The zombie goes to attack, but notices that you look just as dead. Oh well.");
	}
	
	// --> Override
	procedure("MonsterAttack")
	{
		if (random(3) < 2) // 66% chance
		{
			textln("The zombie clumsily takes a swing at you!");
			if (random(4) < 3) // 75% chance
			{
				local dmg = random(5) + 5;
				textln("It slaps you for "+dmg+" damage! Eww!");
				player.health = player.health - dmg;
			}
			else // 25% chance
				textln("It misses, and twirls around due to momentum. Silly zombie!");
		}
		else // 33% chance
		{
			textln("The zombie lunges at you, growling menacingly!");
			if (random(5) < 4) // 80% chance
			{
				local dmg = random(10) + 10;
				textln("It bites you for "+dmg+" damage! Ouch!");
				player.health = player.health - dmg;
			}
			else // 20% chance
				textln("It misses, and falls to the ground.");
		}
		
	}
	
	// --> Override
	procedure("MonsterDie")
	{
		textln("The zombie screams and falls to the ground in a dull *thud*.");
		addObjectName(o_zombie, "dead zombie");

		textln("Huh. A red key fell to the ground.");
		giveObject(room, o_redkey);
	}

	// --> Override
	procedure("MonsterSuperDie")
	{
		textln("The zombie explodes into bloody bits. Damn, son! You really murdered it good!");
		addObjectName(o_zombie, "dead zombie");
		addObjectName(o_zombie, "bits of dead zombie");
		addObjectName(o_zombie, "bits of zombie");

		textln("Huh. A red key fell to the ground.");
		giveObject(room, o_redkey);
	}
	
	// --> Override
	procedure("MonsterStatusDead")
	{
		if (superdead)
			textln("Bits of what used to be a zombie are littered everywhere.");
		else
			textln("There's a dead zombie here.");
	}
	
	onRoomBrowse()
	{
		if (superdead)
			textln("Bits of splattered zombie are everywhere.");
		else if (dead)
			textln("There's a dead zombie, collapsed on the ground.");
		else
			textln("There's a zombie here.");
	}
	
}

object o_sergeant : o_monsters named "sergeant", "the sergeant", "zombie sergeant", "the zombie sergeant" tagged "monster";
object o_imp : o_monsters named "imp", "the imp" tagged "monster";
object o_cacodemon : o_monsters named "cacodemon", "caco", "the cacodemon", "the caco", tagged "monster";
object o_cyberdemon : o_monsters named "cyberdemon", "the cyberdemon" tagged "monster";


