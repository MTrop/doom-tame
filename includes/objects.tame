// Add to world - surrogate for "look" with "examine"
object o_surroundings named "surroundings", "room" {}
// Add to world. Surrogate for "Status" with "examine"
object o_self named "self", "myself", "doomguy" {}

// ==========================
// ALL OBJECTS
// ==========================
object o_allobjects
{
	init()
	{
		examined = false;
		browsed = false;
	}
	
	// Called on first examine.
	procedure("ExamineFirst")
	{
		/* Do nothing. Override this. */
	}
	
	// Called on subsequent examines.
	procedure("ExamineNext")
	{
		/* Do nothing. Override this. */
	}
	
	// Called on every examine (after first/next).
	procedure("ExamineAlways")
	{
		/* Do nothing. Override this. */
	}
	
	onAction(a_examine)
	{
		if (!examined)
		{
			call("ExamineFirst");
			examined = true;
		}
		else
		{
			call("ExamineNext");
		}
		
		call("ExamineAlways");
	}

}

// ==========================
// Keys
// ==========================

// All Keys
object o_allkeys
{
	onAction(a_use)
	{
		textln("This is better off used WITH something. Like a door. It's a key, after all.");
	}

}

// Red Key
object o_redkey : o_allkeys named "key", "keycard", "red key", "red keycard", "keycard with red markings"
{
	procedure("ExamineFirst")
	{
		textln("It's a keycard with red markings on it. A little blood-stained, too. Though it doesn't matter - "+
		"it just makes it more red.");
	}

	procedure("ExamineNext")
	{
		textln("It's a red keycard.");
	}
	
	onAction(a_take)
	{
		if (playerHasObject(player, o_redkey))
			textln("You already have this.");
		else
		{
			textln("You take the red keycard. Could be useful.");
			givePlayerObject(player, o_redkey);
		}
	}

	onPlayerBrowse()
	{
		textln("A red keycard.");
	}

	onRoomBrowse()
	{
		textln("There's a keycard on the ground with red markings.");
	}
	
}

// Blue Key
object o_bluekey : o_allkeys named "key", "keycard", "blue key", "blue keycard"
{
	procedure("ExamineFirst")
	{
		textln("It's a keycard with blue markings on it. Someone left it behind. Or dropped it. Who knows.");
	}

	procedure("ExamineNext")
	{
		textln("It's a blue keycard.");
	}

	onAction(a_take)
	{
		if (playerHasObject(player, o_bluekey))
			textln("You already have this.");
		else
		{
			textln("You take the blue keycard. Why not?");
			givePlayerObject(player, o_bluekey);
		}
	}

	onPlayerBrowse()
	{
		textln("A blue keycard.");
	}

	onRoomBrowse()
	{
		textln("There's a blue keycard on the floor.");
	}
	
}

// Yellow Key
object o_yellowkey : o_allkeys named "key", "keycard", "yellow key", "yellow keycard"
{
	procedure("ExamineFirst")
	{
		textln("It's a keycard with yellow markings on it. Three guesses for what you do with it.");
	}

	procedure("ExamineNext")
	{
		textln("It's a yellow keycard.");
	}

	onAction(a_take)
	{
		if (playerHasObject(player, o_yellowkey))
			textln("You already have this.");
		else
		{
			textln("You take the yellow keycard. Why not?");
			givePlayerObject(player, o_yellowkey);
		}
	}

	onPlayerBrowse()
	{
		textln("A yellow keycard.");
	}

	onRoomBrowse()
	{
		textln("There's a yellow keycard on one of the shelves.");
	}
	
}

// ==========================
// Weapons
// ==========================

// Pistol
object o_pistol : o_allobjects named "pistol", "the pistol", "my pistol"
{
	procedure("ExamineAlways")
	{
		textln("Your trusty sidearm. Standard issue. Never leave home without it!");
	}

	onPlayerBrowse()
	{
		textln("A pistol.");
	}	
}

// Shotgun
object o_shotgun : o_allobjects named "shotgun", "the shotgun", "my shotgun"
{
	procedure("ExamineFirst")
	{
		textln("It's a shotgun. It shoots things. Small things.");
		textln("Doesn't look very high-tech. Maybe UAC didn't try to reinvent the wheel?");
	}

	procedure("ExamineNext")
	{
		textln("It's a shotgun. It shoots things. Small things.");
	}
	
	onPlayerBrowse()
	{
		textln("A shotgun.");
	}
	
	onRoomBrowse()
	{
		textln("A shotgun is here on the ground.");
	}

}

// Rocket Launcher
object o_rocketlauncher : o_allobjects 
	named "rocket launcher", "the rocket launcher", "my rocket launcher", "rockets"
{
	procedure("ExamineFirst")
	{
		textln("It's a rocket launcher. For bigger game and demons.");
		textln("When you need an explosion several feet away from you.");
	}

	procedure("ExamineNext")
	{
		textln("It's a rocket launcher. For bigger game and demons.");
	}
	
	onPlayerBrowse()
	{
		textln("A rocket launcher.");
	}
	
	onRoomBrowse()
	{
		textln("A rocket launcher is on the wall.");
	}

}

// BFG!
object o_bfg : o_allobjects 
	named "BFG", "the BFG", "my BFG", "BFG9000", "the BFG9000", "my BFG9000",
	"BFG 9000", "the BFG 9000", "my BFG 9000", "big fucking gun", "the big fucking gun", "my big fucking gun",
	"BFG9k", "the BFG9k", "my BFG9k"
{
	procedure("ExamineAlways")
	{
		text("It's the BFG 9000. ");
		local x = random(5);
		if (x == 0)
			textln("Ohhhh yes.");
		else if (x == 1)
			textln("Hell yeah.");
		else if (x == 2)
			textln("Don't ask what it stands for.");
		else if (x == 3)
			textln("When something needs to be really, really dead.");
		else if (x == 4)
			textln("For the biggest of baddies and the quickest of paint jobs. Hope you like red.");
	}

	onPlayerBrowse()
	{
		text("A BFG 9000. ");
		local x = random(3);
		if (x == 0)
			textln("Nice.");
		else if (x == 1)
			textln("Sweet.");
		else if (x == 2)
			textln("Awesome.");
	}
	
	onRoomBrowse()
	{
		textln("Oh my God... is that a BFG?!");
	}

}


// ==========================
// Items
// ==========================

object o_healthobject : o_allobjects
{
	init()
	{
		// healthAmount
	}

	// Called if healing is possible.
	procedure("DoHealing")
	{
		/* Do nothing. Override. */
	}
	
	onAction(a_use)
	{
		if (player.health >= 100)
			textln("You're at full health. You don't need to use this.");
		else
			call("DoHealing");
	}

}

// Stimpak
object o_stimpak : o_healthobject named "stimpak"
{
	procedure("DoHealing")
	{
		textln("You heal youself a bit.");
		player.health = min(player.health + 10, 100);
		queueAction(a_status);
	}
}

// Stimpak
object o_medikit : o_healthobject named "stimpak"
{
	procedure("DoHealing")
	{
		textln("You heal youself a bunch.");
		player.health = min(player.health + 25, 100);
		queueAction(a_status);
	}
}

//object o_medikit;


// ==========================
// Doors
// ==========================
object o_everydoor : o_allobjects
{
	init()
	{
		examined = false;
		browsed = false;
		locked = false;
		tryopen = 0;
	}
	
	// Should move player to connected room.
	procedure("GoToNextRoom")
	{
		/* Nothing. Override this. */
		info("THIS DOOR LEADS NOWHERE. OH NO.");
	}
	
	// Should attempt to unlock the door. Set "locked" variable.
	procedure("TryUnlock")
	{
		/* Nothing. Override this. Try to detect necessary key on player. */
	}
	
	// Called to alert the player that it's locked.
	procedure("IsLocked")
	{
		if (tryopen == 0)
			textln("It's locked. I need a key.");
		else if (tryopen == 1)
			textln("It's still locked.");
		else if (tryopen == 2)
			textln("You try to dig your fingers under the door lip and lift. No dice. Still locked.");
		else if (tryopen == 3)
			textln("It's really, really locked.");
		else if (tryopen == 4)
			textln("It's so TOTALLY locked.");
		else if (tryopen == 5)
			textln("It's absolutely locked.");
		else if (tryopen == 6)
			textln("OH MY GOD. IT'S LOCKED, OKAY?! FIND A DAMN KEY.");
		else
			textln("It's locked.");
		
		tryopen = tryopen + 1;
	}
	
	onAction(a_open)
	{
		if (locked)
			call("TryUnlock");
		
		if (locked)
			call("IsLocked");
		else
			call("GoToNextRoom");
	}

	onAction(a_close)
	{
		textln("It's already closed. Good job!");
	}
	
}

// Red Door, to Main Hall
object o_reddoor0 : o_everydoor named "door", "red door", "door with red markings", "door with the red markings"
{
	init()
	{
		examined = false;
		browsed = false;
		locked = true;
	}

	procedure("ExamineFirst")
	{
		textln("A very heavy steel door with red markings flanking the tracks.");
		textln("A sign on the door reads, \"Security Clearance Required\".");
		textln("Another sign above the door reads, \"Main Hall\".");
		addObjectName(o_reddoor0, "security door");
		addObjectName(o_reddoor0, "main hall door");
		addObjectName(o_reddoor0, "door to main hall");
		addObjectName(o_reddoor0, "door to the main hall");
	}

	procedure("ExamineNext")
	{
		textln("It's the red door to the Main Hall.");
		textln("A sign on the door reads, \"Security Clearance Required\".");
	}

	procedure("TryUnlock")
	{
		if (playerHasObject(player, o_redkey))
		{
			textln("You shove the keycard in the door. It beeps with a happy-sounding beep.");
			textln("You hear locks disengage at the bottom of the door.");
			locked = false;
		}
	}

	procedure("GoToNextRoom")
	{
		setRoom(r_mainhall);
		queueAction(a_whereami);
		queueAction(a_description);
	}
	
	onAction(a_take)
	{
		textln("It's a very big, heavy door. You can carry almost anything, but this probably won't fit in your pockets.");
	}
	
	onAction(a_use)
	{
		queueActionObject(a_open, o_reddoor0);
	}

	onActionWith(a_use, o_redkey)
	{
		if (!locked)
		{
			textln("You shove the keycard in the door. Nothing happens.");
			textln("Probably because it's already unlocked.");
		}
		else
			call("TryUnlock");
	}
	
	onActionWithOther(a_use)
	{
		textln("That doesn't look like it'll work. You'll need a matching key of some sort.");
	}
	
	onRoomBrowse()
	{
		if(!browsed)
			textln("There's a door here, lined with red markings.");
		else if (!examined)
			textln("There's a red door here.");
		else
			textln("The red door to the main hall is here.");
	}
	
}

// Red Door, to Entryway
object o_reddoor1 : o_reddoor0 named "door", "red door", "door with red markings", "door with the red markings"
{
	init()
	{
		examined = true;
		browsed = true;
		locked = false;
		addObjectName(o_reddoor1, "security door");
		addObjectName(o_reddoor1, "main hall door");
		addObjectName(o_reddoor1, "door to main hall");
		addObjectName(o_reddoor1, "door to the main hall");
	}

	procedure("ExamineAlways")
	{
		textln("It's the red door to the Main Hall.");
		textln("A sign on the door reads, \"Security Clearance Required\".");
	}

	procedure("GoToNextRoom")
	{
		setRoom(r_entryway);
		queueAction(a_whereami);
		queueAction(a_description);
	}
	
	onAction(a_use)
	{
		queueActionObject(a_open, o_reddoor1);
	}

	onRoomBrowse()
	{
		textln("The red door to the main hall is here.");
	}
	
}

// Door to supply room.
object o_door0 : o_everydoor named "door", "small door"
{
	
}

/*
object o_door1;

object o_reddoor0;
object o_reddoor1;

object o_door2;
object o_door3;

object o_bluedoor0;
object o_bluedoor1;

object o_yellowdoor0;
object o_yellowdoor1;

object o_door4;
object o_door5;

object o_door6;
object o_door7;

object o_door8;
object o_door9;

object o_exitdoor;
*/